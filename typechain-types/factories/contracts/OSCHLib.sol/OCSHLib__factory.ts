/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OCSHLib,
  OCSHLibInterface,
} from "../../../contracts/OSCHLib.sol/OCSHLib";

const _abi = [
  {
    inputs: [],
    name: "ALLIANCE_LEADER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAME_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60d6610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806317282d5c146042578063be22d27d14607a575b600080fd5b60687f828a9190dc16dc0116154c184677dac8abebc0b3aeeba46f3ba5f89b8e41439881565b60405190815260200160405180910390f35b60687f9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f088156fea26469706673582212204d6dace7a6b1f2178f0adaf30ec5e9f28c29cb1da8aa28ddb8f32edf5bde850b64736f6c63430008160033";

type OCSHLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OCSHLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OCSHLib__factory extends ContractFactory {
  constructor(...args: OCSHLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OCSHLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OCSHLib__factory {
    return super.connect(runner) as OCSHLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OCSHLibInterface {
    return new Interface(_abi) as OCSHLibInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OCSHLib {
    return new Contract(address, _abi, runner) as unknown as OCSHLib;
  }
}
