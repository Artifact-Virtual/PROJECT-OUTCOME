{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)314_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)633_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)2292_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1271.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC7913.sol:IERC7913SignatureVerifier": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC7913.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(bytes,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "839128f405bed2516230e21157cc6e683215ae2d07fa4b8851d33bea00e86746",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "a584451e8bebee4bbfb9f27dd02614961404a89403f90d70888beceebfe9708e",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:21"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "3aafdf52b1cfcadcf4ca054c4b52bb10daddaa355cc132f7ad6e40f586a64b43",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "5c46347779912d28eeb72f5475bcac70251b353d8a9e709659792de6eedd43b7",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Bytes.sol:Bytes": {
        "src": "@openzeppelin\\contracts\\utils\\Bytes.sol:11",
        "version": {
          "withMetadata": "f1aaef72dc176ebab3e0e546a4b616d5f66acbfd31c1789e5d2e7e7777678f12",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "3873a4e1b9b6b9bec621037148f19b7116ad39cadfb581fe9c8473cd02911ad4",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "3f1a82163a71d2e4e6a85557978129e95ef464470c330c1b13fc1e8a269c43f1",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin\\contracts\\utils\\ShortStrings.sol:40",
        "version": {
          "withMetadata": "c0e873f6ae4de814cca85f3b0f6ec713d121e8ee7caccc93e77bb7e6c82cd444",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "d6a06010ff840fe413f2ffd9328f4a9c0a9a3cae4886317ba008dfff2cc93fbb",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "a80e721f0503ac1b0d704e98efafb21b3243719804abf4ae5eab5a45118d5c70",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:12",
        "version": {
          "withMetadata": "db38a04a9697577715396505657f7f1a9e5dcc77beb557413e832e61c1ec4203",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:54"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "cea799dfbd45733f42cff9d38b4010a4406c82e0db2c6a0d69f9e9b3551d01df",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\SignatureChecker.sol:20",
        "version": {
          "withMetadata": "a71a9d6cfda6aed192808fd2f28d177fedbf349cb2d0920f9b000d1fffc547b6",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Bytes.sol:Bytes",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "d5022cdce5315d61553ded66b351c2e3679e200fbb9f3d19cef11ed004325ed0",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "20bc711b0b6618dac45c074e7c18f45a3c4689a6e3fbb6d9fc1c4a1cb2ecf14f",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "d0eea58b8dc686809400a6507590f1242699d910384ac02566072f2f623340a8",
          "withoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84",
          "linkedWithoutMetadata": "7d0b86f2a3a59632b81bdfef84dcf6a4bd953ba90926be93775a83e7690dda84"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/BribeEscrow.sol:BribeEscrow": {
        "src": "contracts\\BribeEscrow.sol:15",
        "version": {
          "withMetadata": "d5abac6a44a2159c065a7f03714a47052efc287dc75740ea7a04dbba354b807f",
          "withoutMetadata": "27a185e32f91383244e21903164167219395ce6ef3e245689d1fa7e44a56b4a6",
          "linkedWithoutMetadata": "27a185e32f91383244e21903164167219395ce6ef3e245689d1fa7e44a56b4a6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "createEthBribe(address)",
          "createErc20Bribe(address,address,uint256)",
          "createErc721Bribe(address,address,uint256)",
          "acceptBribe(uint256)",
          "declineBribe(uint256)",
          "cancelBribe(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "nextOfferId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BribeEscrow",
              "src": "contracts\\BribeEscrow.sol:30"
            },
            {
              "label": "offers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Offer)20199_storage)",
              "contract": "BribeEscrow",
              "src": "contracts\\BribeEscrow.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(AssetType)20183": {
              "label": "enum BribeEscrow.AssetType",
              "members": [
                "ETH",
                "ERC20",
                "ERC721"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(Offer)20199_storage)": {
              "label": "mapping(uint256 => struct BribeEscrow.Offer)",
              "numberOfBytes": "32"
            },
            "t_struct(Offer)20199_storage": {
              "label": "struct BribeEscrow.Offer",
              "members": [
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "assetType",
                  "type": "t_enum(AssetType)20183",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/EAS.sol:EAS": {
        "src": "contracts\\EAS.sol:42",
        "version": {
          "withMetadata": "11de81b4444757d7dfaff13cbfeeb7829fd6223a3392eac7b4391353e4afac5f",
          "withoutMetadata": "b75813c890c1f1fd31d29e56d67799a4a0602175e2bf224bf87fe2dd0cf3aff1",
          "linkedWithoutMetadata": "b75813c890c1f1fd31d29e56d67799a4a0602175e2bf224bf87fe2dd0cf3aff1"
        },
        "inherit": [
          "contracts/eip1271/EIP1271Verifier.sol:EIP1271Verifier",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/Semver.sol:Semver",
          "contracts/IEAS.sol:IEAS",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "getSchemaRegistry()",
          "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))",
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiAttest(struct MultiAttestationRequest[])",
          "multiAttestByDelegation(struct MultiDelegatedAttestationRequest[])",
          "revoke((bytes32,(bytes32,uint256)))",
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiRevoke(struct MultiRevocationRequest[])",
          "multiRevokeByDelegation(struct MultiDelegatedRevocationRequest[])",
          "timestamp(bytes32)",
          "revokeOffchain(bytes32)",
          "multiRevokeOffchain(bytes32[])",
          "multiTimestamp(bytes32[])",
          "getAttestation(bytes32)",
          "isAttestationValid(bytes32)",
          "getTimestamp(bytes32)",
          "getRevokeOffchain(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EAS",
            "src": "contracts\\EAS.sol:82"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_schemaRegistry",
            "src": "contracts\\EAS.sol:69"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP1271Verifier",
              "src": "contracts\\eip1271\\EIP1271Verifier.sol:34"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EIP1271Verifier",
              "src": "contracts\\eip1271\\EIP1271Verifier.sol:37"
            },
            {
              "label": "_db",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_struct(Attestation)20783_storage)",
              "contract": "EAS",
              "src": "contracts\\EAS.sol:72"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "EAS",
              "src": "contracts\\EAS.sol:75"
            },
            {
              "label": "_revocationsOffchain",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint64))",
              "contract": "EAS",
              "src": "contracts\\EAS.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint64))": {
              "label": "mapping(address => mapping(bytes32 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Attestation)20783_storage)": {
              "label": "mapping(bytes32 => struct Attestation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Attestation)20783_storage": {
              "label": "struct Attestation",
              "members": [
                {
                  "label": "uid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "schema",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "time",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "revocationTime",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "refUID",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "attester",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "revocable",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "5"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/Eligibility.sol:ARC_Eligibility": {
        "src": "contracts\\Eligibility.sol:22",
        "version": {
          "withMetadata": "518648bf736f0d16f49549fdbe6c81ae381f527beaa0e7eb2e00b4a0472d0982",
          "withoutMetadata": "b6f050d75659f5df9a9d74677d414e70df39186842d92772664e96d43b5ded5a",
          "linkedWithoutMetadata": "b6f050d75659f5df9a9d74677d414e70df39186842d92772664e96d43b5ded5a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "isEligible(address,uint256)",
          "weightOf(address,uint256)",
          "getEligibilityComponents(address,uint256)",
          "totalWeight(uint256)",
          "hasQuorum(uint256,uint256)",
          "hasSupermajority(uint256,uint256)",
          "getTopicConfig(uint256)",
          "updateTopicConfig(uint256,uint256,uint256,uint256,uint256)",
          "setWeightCaps(uint256,uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "identitySBT",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ARC_IdentitySBT)25627",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:56"
            },
            {
              "label": "topicConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(TopicConfig)22805_storage)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:57"
            },
            {
              "label": "eligibilityComponents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(EligibilityComponents)22814_storage)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:58"
            },
            {
              "label": "sbtWeightCap",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:61"
            },
            {
              "label": "tokenWeightCap",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:62"
            },
            {
              "label": "rwaWeightCap",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:63"
            },
            {
              "label": "reputationWeightCap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:64"
            },
            {
              "label": "analytics",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(EligibilityAnalytics)22854_storage",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ARC_IdentitySBT)25627": {
              "label": "contract ARC_IdentitySBT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(EligibilityComponents)22814_storage)": {
              "label": "mapping(address => struct ARC_Eligibility.EligibilityComponents)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopicConfig)22805_storage)": {
              "label": "mapping(uint256 => struct ARC_Eligibility.TopicConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EligibilityAnalytics)22854_storage": {
              "label": "struct ARC_Eligibility.EligibilityAnalytics",
              "members": [
                {
                  "label": "totalEligibilityChecks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "averageWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "highestWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "highestWeightHolder",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(EligibilityComponents)22814_storage": {
              "label": "struct ARC_Eligibility.EligibilityComponents",
              "members": [
                {
                  "label": "sbtWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rwaWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reputationWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopicConfig)22805_storage": {
              "label": "struct ARC_Eligibility.TopicConfig",
              "members": [
                {
                  "label": "quorumWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "supermajorityWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timelockDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/IEAS.sol:IEAS": {
        "src": "contracts\\IEAS.sol:87",
        "inherit": [
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "getSchemaRegistry()",
          "attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))",
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiAttest(struct MultiAttestationRequest[])",
          "multiAttestByDelegation(struct MultiDelegatedAttestationRequest[])",
          "revoke((bytes32,(bytes32,uint256)))",
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiRevoke(struct MultiRevocationRequest[])",
          "multiRevokeByDelegation(struct MultiDelegatedRevocationRequest[])",
          "timestamp(bytes32)",
          "multiTimestamp(bytes32[])",
          "revokeOffchain(bytes32)",
          "multiRevokeOffchain(bytes32[])",
          "getAttestation(bytes32)",
          "isAttestationValid(bytes32)",
          "getTimestamp(bytes32)",
          "getRevokeOffchain(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/ISchemaRegistry.sol:ISchemaRegistry": {
        "src": "contracts\\ISchemaRegistry.sol:19",
        "inherit": [
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "register(string,address,bool)",
          "getSchema(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/ISemver.sol:ISemver": {
        "src": "contracts\\ISemver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/IdentitySBT.sol:ARC_IdentitySBT": {
        "src": "contracts\\IdentitySBT.sol:28",
        "version": {
          "withMetadata": "f9a82bedccbe4945aac87bfa97b103b157aa1e4c2afe1404e6c045301836daee",
          "withoutMetadata": "cc1ec7c29e91525fe5e3c0bec8b4f05450e39a2d74c36ba6d56faa4c8e41655f",
          "linkedWithoutMetadata": "cc1ec7c29e91525fe5e3c0bec8b4f05450e39a2d74c36ba6d56faa4c8e41655f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,bytes32)",
          "issue(address,bytes32,bytes32)",
          "revoke(uint256,string)",
          "heartbeat(bytes32)",
          "hasRole(address,bytes32)",
          "weightOf(address)",
          "weightOfForTopic(address,uint256)",
          "roleOf(uint256)",
          "rolesOf(address)",
          "setRoleWeight(bytes32,uint256)",
          "setTopicMask(bytes32,uint256)",
          "addIssuer(address)",
          "removeIssuer(address)",
          "setConfig(bytes32,uint256)",
          "locked(uint256)",
          "supportsInterface(bytes4)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "schemaId_IdentityRole",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:61"
            },
            {
              "label": "timelock",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:64"
            },
            {
              "label": "safeExecutor",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:65"
            },
            {
              "label": "eas",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:66"
            },
            {
              "label": "epochSeconds",
              "offset": 20,
              "slot": "3",
              "type": "t_uint64",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:68"
            },
            {
              "label": "maxIssuesPerEpoch",
              "offset": 28,
              "slot": "3",
              "type": "t_uint32",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:69"
            },
            {
              "label": "maxRolesPerAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:70"
            },
            {
              "label": "decay_T_seconds",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:73"
            },
            {
              "label": "decay_floorWad",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:74"
            },
            {
              "label": "isIssuer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:88"
            },
            {
              "label": "issuesInEpoch",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint32))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:89"
            },
            {
              "label": "roles",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(RoleRec)24172_storage))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:90"
            },
            {
              "label": "roleTopicMask",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:91"
            },
            {
              "label": "roleDefaultWeightWad",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:92"
            },
            {
              "label": "rolesList",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:93"
            },
            {
              "label": "roleIndexPlus1",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint8))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:94"
            },
            {
              "label": "consumedUID",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:95"
            },
            {
              "label": "analytics",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(SbtAnalytics)24223_storage",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:105"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)314_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)633_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_struct(RoleRec)24172_storage))": {
              "label": "mapping(address => mapping(bytes32 => struct ARC_IdentitySBT.RoleRec))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint8))": {
              "label": "mapping(address => mapping(bytes32 => uint8))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint32))": {
              "label": "mapping(address => mapping(uint64 => uint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleRec)24172_storage)": {
              "label": "mapping(bytes32 => struct ARC_IdentitySBT.RoleRec)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint32)": {
              "label": "mapping(uint64 => uint32)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleRec)24172_storage": {
              "label": "struct ARC_IdentitySBT.RoleRec",
              "members": [
                {
                  "label": "weightWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiresAt",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastBeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "uri",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "evidenceHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "version",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(SbtAnalytics)24223_storage": {
              "label": "struct ARC_IdentitySBT.SbtAnalytics",
              "members": [
                {
                  "label": "totalIssuances",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalRevocations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "activeRoles",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "contracts/OCSH.sol:OCSH": {
        "src": "contracts\\OCSH.sol:14",
        "version": {
          "withMetadata": "5e9526456518cf732fe9e3f2d3763ec6827bce003a4838d7f659785718aadecb",
          "withoutMetadata": "513a13798c92c44bbf0918e6fbc20e325333eb6e26e7087539bfc6ed28507f51",
          "linkedWithoutMetadata": "513a13798c92c44bbf0918e6fbc20e325333eb6e26e7087539bfc6ed28507f51"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/OSCHLib.sol:OCSHLib"
        ],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "mint(address,bytes32)",
          "sendMessage(uint40,string)",
          "createAlliance(uint40[])",
          "joinAlliance(uint40,uint40)",
          "issueChallenge(uint40,uint40)",
          "acceptChallenge(uint40)",
          "proposeTrade(uint40,uint40)",
          "acceptTrade(uint40,uint40)",
          "claimTerritory(uint40,uint40)",
          "getChain(uint40,uint40)",
          "getDarknetGuide()",
          "issueGameRole(address,bytes32,bytes32)",
          "getPlayerStats(address)",
          "calculateBattlePower(uint40)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OCSH",
            "src": "contracts\\OCSH.sol:116"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:21"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "identitySBT",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ARC_IdentitySBT)25627",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:22"
            },
            {
              "label": "chain",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(ChainLink)25728_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:51"
            },
            {
              "label": "nextTokenId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:52"
            },
            {
              "label": "messages",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_array(t_struct(Message)25742_storage)dyn_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:60"
            },
            {
              "label": "lastMsgBlock",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:61"
            },
            {
              "label": "msgCount",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:62"
            },
            {
              "label": "allianceOf",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint40,t_uint40)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:73"
            },
            {
              "label": "alliances",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint40,t_struct(Alliance)25773_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:74"
            },
            {
              "label": "nextAllianceId",
              "offset": 0,
              "slot": "20",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:75"
            },
            {
              "label": "challenges",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint40,t_struct(Challenge)25801_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:86"
            },
            {
              "label": "nextChallengeId",
              "offset": 0,
              "slot": "22",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:87"
            },
            {
              "label": "tradeProposals",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint40,t_uint40)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:90"
            },
            {
              "label": "territories",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint40,t_struct(Territory)25819_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:98"
            },
            {
              "label": "levels",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint40,t_struct(LevelInfo)27203_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Message)25742_storage)dyn_storage": {
              "label": "struct OCSH.Message[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint40)dyn_storage": {
              "label": "uint40[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ARC_IdentitySBT)25627": {
              "label": "contract ARC_IdentitySBT",
              "numberOfBytes": "20"
            },
            "t_enum(ChallengeStatus)25789": {
              "label": "enum OCSH.ChallengeStatus",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Resolved"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Message)25742_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct OCSH.Message[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ChainLink)25728_storage)": {
              "label": "mapping(uint256 => struct OCSH.ChainLink)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Alliance)25773_storage)": {
              "label": "mapping(uint40 => struct OCSH.Alliance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Challenge)25801_storage)": {
              "label": "mapping(uint40 => struct OCSH.Challenge)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(LevelInfo)27203_storage)": {
              "label": "mapping(uint40 => struct OCSHLib.LevelInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Territory)25819_storage)": {
              "label": "mapping(uint40 => struct OCSH.Territory)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_uint40)": {
              "label": "mapping(uint40 => uint40)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Alliance)25773_storage": {
              "label": "struct OCSH.Alliance",
              "members": [
                {
                  "label": "members",
                  "type": "t_array(t_uint40)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "leader",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ChainLink)25728_storage": {
              "label": "struct OCSH.ChainLink",
              "members": [
                {
                  "label": "prevTokenId",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Challenge)25801_storage": {
              "label": "struct OCSH.Challenge",
              "members": [
                {
                  "label": "challenger",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "opponent",
                  "type": "t_uint40",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "status",
                  "type": "t_enum(ChallengeStatus)25789",
                  "offset": 10,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(LevelInfo)27203_storage": {
              "label": "struct OCSHLib.LevelInfo",
              "members": [
                {
                  "label": "xp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint8",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Message)25742_storage": {
              "label": "struct OCSH.Message",
              "members": [
                {
                  "label": "from",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "textHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoleData)2292_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Territory)25819_storage": {
              "label": "struct OCSH.Territory",
              "members": [
                {
                  "label": "ownerTokenId",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allianceId",
                  "type": "t_uint40",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "lastClaimed",
                  "type": "t_uint40",
                  "offset": 10,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint40": {
              "label": "uint40",
              "numberOfBytes": "5"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/OSCHLib.sol:OCSHLib": {
        "src": "contracts\\OSCHLib.sol:4",
        "version": {
          "withMetadata": "f7d8d4148ddb1a3b935fbefd204eb678bbeca9b391ba88bf849d7fd6d25239b5",
          "withoutMetadata": "3454942829aba1e3d6d92c60102155dc1abb18efdf0b52f34108d94ab59f2428",
          "linkedWithoutMetadata": "3454942829aba1e3d6d92c60102155dc1abb18efdf0b52f34108d94ab59f2428"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/SchemaRegistry.sol:SchemaRegistry": {
        "src": "contracts\\SchemaRegistry.sol:13",
        "version": {
          "withMetadata": "713b4ce0106a1cb92b5ee4f13acd941842e2da578e97f19e5af64282ed859741",
          "withoutMetadata": "d25527e5b4379998178291dd1493ef46e8b5cb29a6fbe7e173b4c7465e32a98d",
          "linkedWithoutMetadata": "d25527e5b4379998178291dd1493ef46e8b5cb29a6fbe7e173b4c7465e32a98d"
        },
        "inherit": [
          "contracts/Semver.sol:Semver",
          "contracts/ISchemaRegistry.sol:ISchemaRegistry",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "()",
          "register(string,address,bool)",
          "getSchema(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SchemaRegistry",
            "src": "contracts\\SchemaRegistry.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_registry",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(SchemaRecord)23984_storage)",
              "contract": "SchemaRegistry",
              "src": "contracts\\SchemaRegistry.sol:17"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISchemaResolver)28898": {
              "label": "contract ISchemaResolver",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(SchemaRecord)23984_storage)": {
              "label": "mapping(bytes32 => struct SchemaRecord)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(SchemaRecord)23984_storage": {
              "label": "struct SchemaRecord",
              "members": [
                {
                  "label": "uid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_contract(ISchemaResolver)28898",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "revocable",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "schema",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/Semver.sol:Semver": {
        "src": "contracts\\Semver.sol:11",
        "version": {
          "withMetadata": "087db4f6d78a225b57b00c26885a0758cd5aeb16bb1ecc8879c4b84a1311954b",
          "withoutMetadata": "f0622feb69b3bc7149a70bf7b0ea0b5420ccc31d3cb265efe3eb5d550d4d4096",
          "linkedWithoutMetadata": "f0622feb69b3bc7149a70bf7b0ea0b5420ccc31d3cb265efe3eb5d550d4d4096"
        },
        "inherit": [
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(uint256,uint256,uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Semver",
            "src": "contracts\\Semver.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_major",
            "src": "contracts\\Semver.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_minor",
            "src": "contracts\\Semver.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_patch",
            "src": "contracts\\Semver.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/eip1271/EIP1271Verifier.sol:EIP1271Verifier": {
        "src": "contracts\\eip1271\\EIP1271Verifier.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker"
        ],
        "methods": [
          "getDomainSeparator()",
          "getNonce(address)",
          "getAttestTypeHash()",
          "getRevokeTypeHash()",
          "getName()",
          "increaseNonce(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP1271Verifier",
            "src": "contracts\\eip1271\\EIP1271Verifier.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP1271Verifier",
              "src": "contracts\\eip1271\\EIP1271Verifier.sol:34"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EIP1271Verifier",
              "src": "contracts\\eip1271\\EIP1271Verifier.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/eip712/proxy/EIP712Proxy.sol:EIP712Proxy": {
        "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:74",
        "version": {
          "withMetadata": "74732676aed6db1ac3a4c7f11a46d2c1ec34e2b00e9018f03c7f60ffef313c6f",
          "withoutMetadata": "39af061422ba0e7561d3f10bdf252850ba70d466a5902c83965ab0df3347e462",
          "linkedWithoutMetadata": "39af061422ba0e7561d3f10bdf252850ba70d466a5902c83965ab0df3347e462"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/Semver.sol:Semver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "(address,string)",
          "getEAS()",
          "getDomainSeparator()",
          "getAttestTypeHash()",
          "getRevokeTypeHash()",
          "getName()",
          "getAttester(bytes32)",
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiAttestByDelegation(struct MultiDelegatedProxyAttestationRequest[])",
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiRevokeByDelegation(struct MultiDelegatedProxyRevocationRequest[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Proxy",
            "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:101"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_eas",
            "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:89"
            },
            {
              "label": "_attesters",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:93"
            },
            {
              "label": "_signatures",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_bool)": {
              "label": "mapping(bytes => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/eip712/proxy/examples/PermissionedEIP712Proxy.sol:PermissionedEIP712Proxy": {
        "src": "contracts\\eip712\\proxy\\examples\\PermissionedEIP712Proxy.sol:22",
        "version": {
          "withMetadata": "d6f5d6c2538eed0621418dc24a2c3f980354d7ac67de913388587a7996a4767a",
          "withoutMetadata": "93999512dab40a1c9342585db3c329b488ee5741360a1c821c21161b8aede94d",
          "linkedWithoutMetadata": "93999512dab40a1c9342585db3c329b488ee5741360a1c821c21161b8aede94d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/eip712/proxy/EIP712Proxy.sol:EIP712Proxy",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/Semver.sol:Semver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address,string)",
          "attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiAttestByDelegation(struct MultiDelegatedProxyAttestationRequest[])",
          "revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))",
          "multiRevokeByDelegation(struct MultiDelegatedProxyRevocationRequest[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PermissionedEIP712Proxy",
            "src": "contracts\\eip712\\proxy\\examples\\PermissionedEIP712Proxy.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin\\contracts\\utils\\cryptography\\EIP712.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:89"
            },
            {
              "label": "_attesters",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:93"
            },
            {
              "label": "_signatures",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
              "contract": "EIP712Proxy",
              "src": "contracts\\eip712\\proxy\\EIP712Proxy.sol:96"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_bool)": {
              "label": "mapping(bytes => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/ISchemaResolver.sol:ISchemaResolver": {
        "src": "contracts\\resolver\\ISchemaResolver.sol:10",
        "inherit": [
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "isPayable()",
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
          "multiAttest(struct Attestation[],uint256[])",
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
          "multiRevoke(struct Attestation[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/SchemaResolver.sol:SchemaResolver": {
        "src": "contracts\\resolver\\SchemaResolver.sol:12",
        "inherit": [
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "isPayable()",
          "()",
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
          "multiAttest(struct Attestation[],uint256[])",
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
          "multiRevoke(struct Attestation[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SchemaResolver",
            "src": "contracts\\resolver\\SchemaResolver.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_eas",
            "src": "contracts\\resolver\\SchemaResolver.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/AttestationResolver.sol:AttestationResolver": {
        "src": "contracts\\resolver\\examples\\AttestationResolver.sol:12",
        "version": {
          "withMetadata": "193edfb838f9618a78ab316b470dff345f6bd0eb84bf38a1793d29cdea924540",
          "withoutMetadata": "d31239892601cb343119c9129a9e688d899f5c143aaf7a5c4c6a2ed7efa864c9",
          "linkedWithoutMetadata": "d31239892601cb343119c9129a9e688d899f5c143aaf7a5c4c6a2ed7efa864c9"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "toBytes32(bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttestationResolver",
            "src": "contracts\\resolver\\examples\\AttestationResolver.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/AttesterResolver.sol:AttesterResolver": {
        "src": "contracts\\resolver\\examples\\AttesterResolver.sol:11",
        "version": {
          "withMetadata": "dcd18ac8818ad863e2c9799654ae93b1f2ea23264e829d83a916b4550f40ec01",
          "withoutMetadata": "1eb8c23511b2b67c932aeb4814322b2622bfcfc82ca68fcbc8c8bad337ff4149",
          "linkedWithoutMetadata": "1eb8c23511b2b67c932aeb4814322b2622bfcfc82ca68fcbc8c8bad337ff4149"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttesterResolver",
            "src": "contracts\\resolver\\examples\\AttesterResolver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_targetAttester",
            "src": "contracts\\resolver\\examples\\AttesterResolver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/DataResolver.sol:DataResolver": {
        "src": "contracts\\resolver\\examples\\DataResolver.sol:11",
        "version": {
          "withMetadata": "28e604207cf1e8fa915b63fe6ae1d5786f906874feedebbeb1646654771017f1",
          "withoutMetadata": "540d3608e730e06065af840279bf03fc37280f222f67e8f85eb2fb0ba5e0d46f",
          "linkedWithoutMetadata": "540d3608e730e06065af840279bf03fc37280f222f67e8f85eb2fb0ba5e0d46f"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DataResolver",
            "src": "contracts\\resolver\\examples\\DataResolver.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/ExpirationTimeResolver.sol:ExpirationTimeResolver": {
        "src": "contracts\\resolver\\examples\\ExpirationTimeResolver.sol:11",
        "version": {
          "withMetadata": "d5b0ed0ee6b1e4dceaf230ba11ec8ad8c2c5ce6318ee870dbeaaf0924a3d4381",
          "withoutMetadata": "57087401a65269c5027fd8ff6726992ed326bb75ecd182af9505c5917c15c023",
          "linkedWithoutMetadata": "57087401a65269c5027fd8ff6726992ed326bb75ecd182af9505c5917c15c023"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExpirationTimeResolver",
            "src": "contracts\\resolver\\examples\\ExpirationTimeResolver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_validAfter",
            "src": "contracts\\resolver\\examples\\ExpirationTimeResolver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/PayingResolver.sol:PayingResolver": {
        "src": "contracts\\resolver\\examples\\PayingResolver.sol:13",
        "version": {
          "withMetadata": "8806f46d110c4742018d1d299f04b97e5d4decaaf00afe7508e1269410decbfc",
          "withoutMetadata": "4e016ccdd8b08d7f6eba019b74da799c80cd6f6429230e7dac954f5bbc84fa8c",
          "linkedWithoutMetadata": "4e016ccdd8b08d7f6eba019b74da799c80cd6f6429230e7dac954f5bbc84fa8c"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,uint256)",
          "isPayable()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PayingResolver",
            "src": "contracts\\resolver\\examples\\PayingResolver.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_incentive",
            "src": "contracts\\resolver\\examples\\PayingResolver.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/RecipientResolver.sol:RecipientResolver": {
        "src": "contracts\\resolver\\examples\\RecipientResolver.sol:11",
        "version": {
          "withMetadata": "5a6dbf4f259ae3d03f2b82f612a4ae227df4b999c0ec18644737272d9dee4e02",
          "withoutMetadata": "0a84c41aac78e0346bc6c19fd4d36848231a68fd82b6532205c341fb7b710e81",
          "linkedWithoutMetadata": "0a84c41aac78e0346bc6c19fd4d36848231a68fd82b6532205c341fb7b710e81"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecipientResolver",
            "src": "contracts\\resolver\\examples\\RecipientResolver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_targetRecipient",
            "src": "contracts\\resolver\\examples\\RecipientResolver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/RevocationResolver.sol:RevocationResolver": {
        "src": "contracts\\resolver\\examples\\RevocationResolver.sol:11",
        "version": {
          "withMetadata": "7135793dd83738e666daa2b8e3683ab5da0fa0e82ce149e5c1ee8b0ca195b4ae",
          "withoutMetadata": "0008e677bb7a5186fb832ba73199b72562f9d7d6c40e77287e5cd02754c33886",
          "linkedWithoutMetadata": "0008e677bb7a5186fb832ba73199b72562f9d7d6c40e77287e5cd02754c33886"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRevocation(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RevocationResolver",
            "src": "contracts\\resolver\\examples\\RevocationResolver.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_revocation",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "RevocationResolver",
              "src": "contracts\\resolver\\examples\\RevocationResolver.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/TokenResolver.sol:TokenResolver": {
        "src": "contracts\\resolver\\examples\\TokenResolver.sol:14",
        "version": {
          "withMetadata": "5aabdc842de8581f3aeb503678491a0bbd4b1a5060001f0c1a0708dc96cbb103",
          "withoutMetadata": "5794aa9e1bda786bd89cdfbb6e39e74f106b5dbb39b579834637d4aa1b28ae2c",
          "linkedWithoutMetadata": "5794aa9e1bda786bd89cdfbb6e39e74f106b5dbb39b579834637d4aa1b28ae2c"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenResolver",
            "src": "contracts\\resolver\\examples\\TokenResolver.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_targetToken",
            "src": "contracts\\resolver\\examples\\TokenResolver.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_targetAmount",
            "src": "contracts\\resolver\\examples\\TokenResolver.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "contracts/resolver/examples/ValueResolver.sol:ValueResolver": {
        "src": "contracts\\resolver\\examples\\ValueResolver.sol:11",
        "version": {
          "withMetadata": "ccd37de431c2553990be15a05360acb6bebcd53c999b37d98239d202417dd92a",
          "withoutMetadata": "39af3c827c092577a4c87fcce5f085593de08dd809ba63388d286cc8479da295",
          "linkedWithoutMetadata": "39af3c827c092577a4c87fcce5f085593de08dd809ba63388d286cc8479da295"
        },
        "inherit": [
          "contracts/resolver/SchemaResolver.sol:SchemaResolver",
          "contracts/Semver.sol:Semver",
          "contracts/resolver/ISchemaResolver.sol:ISchemaResolver",
          "contracts/ISemver.sol:ISemver"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "isPayable()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ValueResolver",
            "src": "contracts\\resolver\\examples\\ValueResolver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_targetValue",
            "src": "contracts\\resolver\\examples\\ValueResolver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      }
    },
    {
      "contracts/mocks/EASMock.sol:EASMock": {
        "src": "contracts\\mocks\\EASMock.sol:5",
        "version": {
          "withMetadata": "25f5e5bdf4b91d10f326e4f4ca3801dca69704cc80a9f5da45d2f300738a2a78",
          "withoutMetadata": "50826072f0b6fa7ed90fad300b74c8151c9723aa4c0a26d3c60bf624ff978376",
          "linkedWithoutMetadata": "50826072f0b6fa7ed90fad300b74c8151c9723aa4c0a26d3c60bf624ff978376"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attest(bytes32,bytes32,address,bytes32)",
          "getAttestation(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)314_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)633_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)2292_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "988c51be94040b5bb78e6739ecf31c3539c880afc84253fa97a12de186ef7572",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "816a908af8406ba91a6c75f52f973b33ee06972fc0feaabbb662fb6a72149528",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:21"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "7b79110bbdc1f736d3c075fdb1eb697cbfb2d70a8b3c564b7c58f51cba6dcfe3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "041c0d4f90bb8e17d3ab85a9968cb4f2c9ad776fac701e799df8a26338a603d7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "5f46a4584c437cd91e6e4386b93037e61fa724904275bd84b5f58da24743a61f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "0121cc0fc78085813143983b615307ccbaaf908861dec39a7be212d934a5dcea",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "e34a460afe63f8e676880ba0751522137768df1fdd3fff06c598d9006111366b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "44e0677e59d67f2ed3311f068f4bc93d6115e46c982667797cb1c526eee760d3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:12",
        "version": {
          "withMetadata": "45856bf81aba906570ef99b5bf85fd4ca330c189d34ed5c680fbcaf1db70f788",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "6c42cfab0e90ab935643b45b448e5d7483ce74bd57f91f4a9e1548d84a4e5371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "79270a4c917814a01e4d711d0a0388887dfbdfbcbf2744d7efaa6932e83d0f99",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "5bf0934677c18e82ab9e236ff2711c8a01d21dcccaa601fe89160945768b1a60",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/BribeEscrow.sol:BribeEscrow": {
        "src": "contracts\\BribeEscrow.sol:15",
        "version": {
          "withMetadata": "4e67b7a49bae70b5dadd3186fe2e7fd03685b6fe6eb3da80a0da2dae61ed01c1",
          "withoutMetadata": "6da45fcc16c9b441a3db10c49012e7f24321165fe6bfa5c56957f415a3f270e0",
          "linkedWithoutMetadata": "6da45fcc16c9b441a3db10c49012e7f24321165fe6bfa5c56957f415a3f270e0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "createEthBribe(address)",
          "createErc20Bribe(address,address,uint256)",
          "createErc721Bribe(address,address,uint256)",
          "acceptBribe(uint256)",
          "declineBribe(uint256)",
          "cancelBribe(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "nextOfferId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BribeEscrow",
              "src": "contracts\\BribeEscrow.sol:30"
            },
            {
              "label": "offers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Offer)19079_storage)",
              "contract": "BribeEscrow",
              "src": "contracts\\BribeEscrow.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(AssetType)19063": {
              "label": "enum BribeEscrow.AssetType",
              "members": [
                "ETH",
                "ERC20",
                "ERC721"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(Offer)19079_storage)": {
              "label": "mapping(uint256 => struct BribeEscrow.Offer)",
              "numberOfBytes": "32"
            },
            "t_struct(Offer)19079_storage": {
              "label": "struct BribeEscrow.Offer",
              "members": [
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "assetType",
                  "type": "t_enum(AssetType)19063",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Eligibility.sol:ARC_Eligibility": {
        "src": "contracts\\Eligibility.sol:22",
        "version": {
          "withMetadata": "099b3610a8a50d49bd5f4452bfbc433e65c2cb336a6f9430f2608f718f4e0874",
          "withoutMetadata": "ca3de3c76d771360a9499f88bd7e4c47c4039b6799a39ecb902ab0af613f6d24",
          "linkedWithoutMetadata": "ca3de3c76d771360a9499f88bd7e4c47c4039b6799a39ecb902ab0af613f6d24"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "isEligible(address,uint256)",
          "weightOf(address,uint256)",
          "getEligibilityComponents(address,uint256)",
          "totalWeight(uint256)",
          "hasQuorum(uint256,uint256)",
          "hasSupermajority(uint256,uint256)",
          "getTopicConfig(uint256)",
          "updateTopicConfig(uint256,uint256,uint256,uint256,uint256)",
          "setWeightCaps(uint256,uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "identitySBT",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ARC_IdentitySBT)22117",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:56"
            },
            {
              "label": "topicConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(TopicConfig)19665_storage)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:57"
            },
            {
              "label": "eligibilityComponents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(EligibilityComponents)19674_storage)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:58"
            },
            {
              "label": "sbtWeightCap",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:61"
            },
            {
              "label": "tokenWeightCap",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:62"
            },
            {
              "label": "rwaWeightCap",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:63"
            },
            {
              "label": "reputationWeightCap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:64"
            },
            {
              "label": "analytics",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(EligibilityAnalytics)19714_storage",
              "contract": "ARC_Eligibility",
              "src": "contracts\\Eligibility.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(ARC_IdentitySBT)22117": {
              "label": "contract ARC_IdentitySBT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(EligibilityComponents)19674_storage)": {
              "label": "mapping(address => struct ARC_Eligibility.EligibilityComponents)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopicConfig)19665_storage)": {
              "label": "mapping(uint256 => struct ARC_Eligibility.TopicConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EligibilityAnalytics)19714_storage": {
              "label": "struct ARC_Eligibility.EligibilityAnalytics",
              "members": [
                {
                  "label": "totalEligibilityChecks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "averageWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "highestWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "highestWeightHolder",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(EligibilityComponents)19674_storage": {
              "label": "struct ARC_Eligibility.EligibilityComponents",
              "members": [
                {
                  "label": "sbtWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rwaWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reputationWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopicConfig)19665_storage": {
              "label": "struct ARC_Eligibility.TopicConfig",
              "members": [
                {
                  "label": "quorumWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "supermajorityWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timelockDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/IdentitySBT.sol:ARC_IdentitySBT": {
        "src": "contracts\\IdentitySBT.sol:28",
        "version": {
          "withMetadata": "2157214944258e78ac48ff814403a79124a617b8e792bd9c31b090f05d801eb1",
          "withoutMetadata": "a4a5ab9f284c69b90e27d5ab1d003f4a2c1f0a0f487db7cc4f45fd31c5891ae7",
          "linkedWithoutMetadata": "a4a5ab9f284c69b90e27d5ab1d003f4a2c1f0a0f487db7cc4f45fd31c5891ae7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,bytes32)",
          "issue(address,bytes32,bytes32)",
          "revoke(uint256,string)",
          "heartbeat(bytes32)",
          "hasRole(address,bytes32)",
          "weightOf(address)",
          "weightOfForTopic(address,uint256)",
          "roleOf(uint256)",
          "rolesOf(address)",
          "setRoleWeight(bytes32,uint256)",
          "setTopicMask(bytes32,uint256)",
          "addIssuer(address)",
          "removeIssuer(address)",
          "setConfig(bytes32,uint256)",
          "locked(uint256)",
          "supportsInterface(bytes4)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "schemaId_IdentityRole",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:61"
            },
            {
              "label": "timelock",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:64"
            },
            {
              "label": "safeExecutor",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:65"
            },
            {
              "label": "eas",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:66"
            },
            {
              "label": "epochSeconds",
              "offset": 20,
              "slot": "3",
              "type": "t_uint64",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:68"
            },
            {
              "label": "maxIssuesPerEpoch",
              "offset": 28,
              "slot": "3",
              "type": "t_uint32",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:69"
            },
            {
              "label": "maxRolesPerAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:70"
            },
            {
              "label": "decay_T_seconds",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:73"
            },
            {
              "label": "decay_floorWad",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:74"
            },
            {
              "label": "isIssuer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:88"
            },
            {
              "label": "issuesInEpoch",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint32))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:89"
            },
            {
              "label": "roles",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(RoleRec)20662_storage))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:90"
            },
            {
              "label": "roleTopicMask",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:91"
            },
            {
              "label": "roleDefaultWeightWad",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:92"
            },
            {
              "label": "rolesList",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:93"
            },
            {
              "label": "roleIndexPlus1",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint8))",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:94"
            },
            {
              "label": "consumedUID",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:95"
            },
            {
              "label": "analytics",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(SbtAnalytics)20713_storage",
              "contract": "ARC_IdentitySBT",
              "src": "contracts\\IdentitySBT.sol:105"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)314_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)633_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)697_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
              "label": "mapping(address => bytes32[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_struct(RoleRec)20662_storage))": {
              "label": "mapping(address => mapping(bytes32 => struct ARC_IdentitySBT.RoleRec))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint8))": {
              "label": "mapping(address => mapping(bytes32 => uint8))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint32))": {
              "label": "mapping(address => mapping(uint64 => uint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleRec)20662_storage)": {
              "label": "mapping(bytes32 => struct ARC_IdentitySBT.RoleRec)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint32)": {
              "label": "mapping(uint64 => uint32)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleRec)20662_storage": {
              "label": "struct ARC_IdentitySBT.RoleRec",
              "members": [
                {
                  "label": "weightWad",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiresAt",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastBeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "uri",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "evidenceHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "version",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(SbtAnalytics)20713_storage": {
              "label": "struct ARC_IdentitySBT.SbtAnalytics",
              "members": [
                {
                  "label": "totalIssuances",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalRevocations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "activeRoles",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalWeight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OCSH.sol:OCSH": {
        "src": "contracts\\OCSH.sol:14",
        "version": {
          "withMetadata": "cc87266a707652646c8299d4072a4b9fd71139019028b6673e3ca3fe8320d988",
          "withoutMetadata": "325490a741b2d1f4c37a0c65edbea8b0f246ae4c49e960e046303c8ff8e10015",
          "linkedWithoutMetadata": "325490a741b2d1f4c37a0c65edbea8b0f246ae4c49e960e046303c8ff8e10015"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/OSCHLib.sol:OCSHLib"
        ],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "mint(address,bytes32)",
          "sendMessage(uint40,string)",
          "createAlliance(uint40[])",
          "joinAlliance(uint40,uint40)",
          "issueChallenge(uint40,uint40)",
          "acceptChallenge(uint40)",
          "proposeTrade(uint40,uint40)",
          "acceptTrade(uint40,uint40)",
          "claimTerritory(uint40,uint40)",
          "getChain(uint40,uint40)",
          "getDarknetGuide()",
          "issueGameRole(address,bytes32,bytes32)",
          "getPlayerStats(address)",
          "calculateBattlePower(uint40)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OCSH",
            "src": "contracts\\OCSH.sol:116"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:21"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol:22"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "identitySBT",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ARC_IdentitySBT)22117",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:22"
            },
            {
              "label": "chain",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(ChainLink)22218_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:51"
            },
            {
              "label": "nextTokenId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:52"
            },
            {
              "label": "messages",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_array(t_struct(Message)22232_storage)dyn_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:60"
            },
            {
              "label": "lastMsgBlock",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:61"
            },
            {
              "label": "msgCount",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:62"
            },
            {
              "label": "allianceOf",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint40,t_uint40)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:73"
            },
            {
              "label": "alliances",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint40,t_struct(Alliance)22263_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:74"
            },
            {
              "label": "nextAllianceId",
              "offset": 0,
              "slot": "20",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:75"
            },
            {
              "label": "challenges",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint40,t_struct(Challenge)22291_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:86"
            },
            {
              "label": "nextChallengeId",
              "offset": 0,
              "slot": "22",
              "type": "t_uint40",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:87"
            },
            {
              "label": "tradeProposals",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint40,t_uint40)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:90"
            },
            {
              "label": "territories",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint40,t_struct(Territory)22309_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:98"
            },
            {
              "label": "levels",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint40,t_struct(LevelInfo)23693_storage)",
              "contract": "OCSH",
              "src": "contracts\\OCSH.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Message)22232_storage)dyn_storage": {
              "label": "struct OCSH.Message[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint40)dyn_storage": {
              "label": "uint40[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ARC_IdentitySBT)22117": {
              "label": "contract ARC_IdentitySBT",
              "numberOfBytes": "20"
            },
            "t_enum(ChallengeStatus)22279": {
              "label": "enum OCSH.ChallengeStatus",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Resolved"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2292_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Message)22232_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct OCSH.Message[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ChainLink)22218_storage)": {
              "label": "mapping(uint256 => struct OCSH.ChainLink)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Alliance)22263_storage)": {
              "label": "mapping(uint40 => struct OCSH.Alliance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Challenge)22291_storage)": {
              "label": "mapping(uint40 => struct OCSH.Challenge)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(LevelInfo)23693_storage)": {
              "label": "mapping(uint40 => struct OCSHLib.LevelInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_struct(Territory)22309_storage)": {
              "label": "mapping(uint40 => struct OCSH.Territory)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint40,t_uint40)": {
              "label": "mapping(uint40 => uint40)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Alliance)22263_storage": {
              "label": "struct OCSH.Alliance",
              "members": [
                {
                  "label": "members",
                  "type": "t_array(t_uint40)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "leader",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ChainLink)22218_storage": {
              "label": "struct OCSH.ChainLink",
              "members": [
                {
                  "label": "prevTokenId",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Challenge)22291_storage": {
              "label": "struct OCSH.Challenge",
              "members": [
                {
                  "label": "challenger",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "opponent",
                  "type": "t_uint40",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "status",
                  "type": "t_enum(ChallengeStatus)22279",
                  "offset": 10,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(LevelInfo)23693_storage": {
              "label": "struct OCSHLib.LevelInfo",
              "members": [
                {
                  "label": "xp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint8",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Message)22232_storage": {
              "label": "struct OCSH.Message",
              "members": [
                {
                  "label": "from",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "textHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoleData)2292_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Territory)22309_storage": {
              "label": "struct OCSH.Territory",
              "members": [
                {
                  "label": "ownerTokenId",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allianceId",
                  "type": "t_uint40",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "lastClaimed",
                  "type": "t_uint40",
                  "offset": 10,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint40": {
              "label": "uint40",
              "numberOfBytes": "5"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OSCHLib.sol:OCSHLib": {
        "src": "contracts\\OSCHLib.sol:4",
        "version": {
          "withMetadata": "abf01372ad8b05dd77b196c5cfb72d28f730fe871657ef119895726070b2ea99",
          "withoutMetadata": "e1c434faa9ac1fa4f45a1a4c06e38c3b7b16c6c04b3c13deed4a38fc1d1171c8",
          "linkedWithoutMetadata": "e1c434faa9ac1fa4f45a1a4c06e38c3b7b16c6c04b3c13deed4a38fc1d1171c8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/mocks/MockIdentitySBT.sol:MockIdentitySBT": {
        "src": "contracts\\mocks\\MockIdentitySBT.sol:6",
        "version": {
          "withMetadata": "e69d3b6ee0b06d3386bc3b50ca6b55c60eeda38261722baab8123a6933be3919",
          "withoutMetadata": "31c7e26ad48f10b60e347e0f564d4c537db3b6c7699df8cbf4a98b2b9ca659f4",
          "linkedWithoutMetadata": "31c7e26ad48f10b60e347e0f564d4c537db3b6c7699df8cbf4a98b2b9ca659f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRole(address,bytes32,bool)",
          "setWeight(address,uint256)",
          "hasRole(address,bytes32)",
          "weightOf(address)",
          "issue(address,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "contract": "MockIdentitySBT",
              "src": "contracts\\mocks\\MockIdentitySBT.sol:7"
            },
            {
              "label": "weights",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MockIdentitySBT",
              "src": "contracts\\mocks\\MockIdentitySBT.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    }
  ]
}